/************************************************************************
APLIKACIJA	: Hotel Reservation - Diplomski rad
SKRIPTA		: 10_HOTEL_RES_Tables_DDL.sql
OPIS		: DDL skripita za sekvence, tabele i pratece objekte
		
			Sekvence:
				--SEQ01 PLAYGROUND.E_RESERVATION_SEQ
			Tabele:	
				--#01 PLAYGROUND.E_RESERVATIONS
				--#02 PLAYGROUND.E_ROOMS
				--#03 PLAYGROUND.E_RESERVATION_ROOMS
				--#04 PLAYGROUND.E_ROOM_PRICES
				--#05 PLAYGROUND.E_CHECKED_IN_PERSONS
				--#06 PLAYGROUND.E_LOV
				--#07 PLAYGROUND.TMP_ROOM_UTILIZATION

AUTOR		: M.Nikolic
VERZIJA     : 1.0.0
DATUM       : Nov 2024

ISTORIJA REVIZIJE
===============================================================================
REVIZIJA    |  	DATUM     	|  	OPIS IZMENA						  | POTPIS
-------------------------------------------------------------------------------
1.0.0   	 	NOV-20-2024   	Inicijalna verzija					M.Nikolic
********************************************************************************/

/********************************
	SEKVENCE
*********************************/
--SEQ01 PLAYGROUND.E_RESERVATION_SEQ
CREATE SEQUENCE  "PLAYGROUND"."E_RESERVATION_SEQ" 
MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 401 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;

/********************************
	TABELE
*********************************/


--#01 PLAYGROUND.E_RESERVATIONS
BEGIN
  EXECUTE IMMEDIATE 'DROP TABLE PLAYGROUND.E_RESERVATIONS';
  EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -942 THEN
         RAISE;
  end if;
END;
/

CREATE TABLE "PLAYGROUND"."E_RESERVATIONS" 
(
	--Kolone
	"ID" 				NUMBER 	GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  
								NOCYCLE  NOKEEP  NO	SCALE  NOT NULL ENABLE, 
	"START_DT" 			DATE, 
	"END_DT" 			DATE, 
	"RESERVATION_CD" 	VARCHAR2(20 CHAR) 	COLLATE "USING_NLS_COMP", 
	"USER_MAIL" 		VARCHAR2(100 CHAR) 	COLLATE "USING_NLS_COMP", 
	"CREATED" 			DATE, 
	"CREATED_BY" 		VARCHAR2(255 BYTE) 	COLLATE "USING_NLS_COMP", 
	"UPDATED" 			DATE, 
	"UPDATED_BY" 		VARCHAR2(255 BYTE) 	COLLATE "USING_NLS_COMP", 
	"BREAKFAST_INC" 	VARCHAR2(2 BYTE) 	COLLATE "USING_NLS_COMP", 
	"PRICE" 			NUMBER, 
	"NUM_OF_GUESTS" 	NUMBER, 
	"CURR_STATUS" 		VARCHAR2(100 BYTE) COLLATE "USING_NLS_COMP",

	--Ogranicenja 
	CONSTRAINT "E_RESERVATIONS_ID_PK" PRIMARY KEY ("ID"), 
	CONSTRAINT "RESERVATIONS_RESERVATION_CD_UNQ" UNIQUE ("RESERVATION_CD")
);

CREATE OR REPLACE EDITIONABLE TRIGGER "PLAYGROUND"."E_RESERVATIONS_BIU" 
    before insert or update
    on playground.e_reservations
    for each row
begin
    if inserting then
        :new.created := sysdate;
        :new.created_by := coalesce(sys_context('APEX$SESSION','APP_USER'),user);
    end if;
    :new.updated := sysdate;
    :new.updated_by := coalesce(sys_context('APEX$SESSION','APP_USER'),user);
end;  
/

CREATE OR REPLACE EDITIONABLE TRIGGER "PLAYGROUND"."E_RESERVATION_SET_RESERVATION_CD" 
   before insert on "PLAYGROUND"."E_RESERVATIONS" 
   for each row
declare
    code NUMBER;
    column_len number;
begin  
   if inserting then 
      if :NEW."RESERVATION_CD" is null then 
--         
        code := E_RESERVATION_SEQ.nextval;
        select data_length into column_len
            from user_tab_columns
            where table_name = 'E_RESERVATIONS'
            and column_name = 'RESERVATION_CD';
            
            
        :new.reservation_cd := 'HTL' || lpad(to_char(code), column_len/4 - LENGTH('HTL'), '0');
      end if; 
   end if; 
end;
/


--#02 PLAYGROUND.E_ROOMS
BEGIN
  EXECUTE IMMEDIATE 'DROP TABLE PLAYGROUND.E_ROOMS';
  EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -942 THEN
         RAISE;
  end if;
END;
/

CREATE TABLE "PLAYGROUND"."E_ROOMS" 
(
	--Kolone
	"ID" 			NUMBER 	GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  
							NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, 
	"ROOM_NUM" 		VARCHAR2(10 CHAR) COLLATE "USING_NLS_COMP", 
	"PERSONS" 		NUMBER, 
	"SIZE_SQM" 		NUMBER, 
	"FLOOR_NUM" 	NUMBER, 
	"SINGLE_BEDS" 	NUMBER, 
	"DOUBLE_BEDS" 	NUMBER, 
	"CREATED" 		DATE 										NOT NULL ENABLE, 
	"CREATED_BY" 	VARCHAR2(255 CHAR) COLLATE "USING_NLS_COMP" NOT NULL ENABLE, 
	"UPDATED" 		DATE 										NOT NULL ENABLE, 
	"UPDATED_BY" 	VARCHAR2(255 CHAR) COLLATE "USING_NLS_COMP" NOT NULL ENABLE,

	--Ogranicenja 
	CONSTRAINT "E_ROOMS_ID_PK" PRIMARY KEY ("ID"), 
	CONSTRAINT "ROOMS_ROOM_NUM_UNQ" UNIQUE ("ROOM_NUM")
);

CREATE OR REPLACE EDITIONABLE TRIGGER "PLAYGROUND"."E_ROOMS_CREATE_UPDATE" 
    before insert or update
    on playground.e_rooms
    for each row
begin
    if inserting then
        :new.created := sysdate;
        :new.created_by := coalesce(sys_context('APEX$SESSION','APP_USER'),user);
    end if;
    :new.updated := sysdate;
    :new.updated_by := coalesce(sys_context('APEX$SESSION','APP_USER'),user);
end;
/

CREATE OR REPLACE EDITIONABLE TRIGGER "PLAYGROUND"."E_ROOMS_SET_FLOOR" 
	BEFORE INSERT ON E_ROOMS 
	REFERENCING OLD AS OLD NEW AS NEW
	FOR EACH ROW
BEGIN
  	IF :NEW.FLOOR_NUM IS NULL
  	THEN
    	:NEW.FLOOR_NUM := TO_NUMBER(SUBSTR(:NEW.ROOM_NUM, 1, 1) DEFAULT 1 ON CONVERSION ERROR);
  	END IF;
END;
/


--#03 PLAYGROUND.E_RESERVATION_ROOMS
BEGIN
  EXECUTE IMMEDIATE 'DROP TABLE PLAYGROUND.E_RESERVATION_ROOMS';
  EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -942 THEN
         RAISE;
  end if;
END;
/

CREATE TABLE "PLAYGROUND"."E_RESERVATION_ROOMS" 
(
	--Kolone
	"RESERVATION_CD" 	VARCHAR2(20 CHAR) COLLATE "USING_NLS_COMP" NOT NULL ENABLE, 
	"ROOM_NUM" 			VARCHAR2(10 CHAR) COLLATE "USING_NLS_COMP" NOT NULL ENABLE, 
	"ID" 				VARCHAR2(35 BYTE) COLLATE "USING_NLS_COMP" DEFAULT NULL NOT NULL ENABLE,

	--Ogranicenja 
	CONSTRAINT "E_RESERVATION_ROOMS_PK" PRIMARY KEY ("ID"), 
	CONSTRAINT "E_RESERVATION_ROOMS_FK2" FOREIGN KEY ("ROOM_NUM") REFERENCES "PLAYGROUND"."E_ROOMS" ("ROOM_NUM") ENABLE, 
	CONSTRAINT "E_RESERVATION_ROOMS_FK1" FOREIGN KEY ("RESERVATION_CD") REFERENCES "PLAYGROUND"."E_RESERVATIONS" ("RESERVATION_CD") ON DELETE CASCADE ENABLE
);

CREATE OR REPLACE EDITIONABLE TRIGGER "PLAYGROUND"."E_RESERVATION_ROOMS_SET_PK" 
	BEFORE UPDATE OR INSERT ON E_RESERVATION_ROOMS 
	REFERENCING OLD AS OLD NEW AS NEW
	FOR EACH ROW
BEGIN
  	:NEW.ID := :NEW.RESERVATION_CD || '~' || :NEW.ROOM_NUM;
END;
/


--#04 PLAYGROUND.E_ROOM_PRICES
BEGIN
  EXECUTE IMMEDIATE 'DROP TABLE PLAYGROUND.E_ROOM_PRICES';
  EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -942 THEN
         RAISE;
  end if;
END;
/

CREATE TABLE "PLAYGROUND"."E_ROOM_PRICES" 
(
	--Kolone
	"ID" 					NUMBER 	GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  									NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, 
	"PERSONS" 				NUMBER, 
	"PRICE" 				NUMBER, 
	"START_VALIDITY_DT" 	DATE, 
	"END_VALIDITY_DT" 		DATE, 
	"CREATED" 				DATE 										NOT NULL ENABLE, 
	"CREATED_BY" 			VARCHAR2(255 CHAR) COLLATE "USING_NLS_COMP" NOT NULL ENABLE, 
	"UPDATED" 				DATE 										NOT NULL ENABLE, 
	"UPDATED_BY" 			VARCHAR2(255 CHAR) COLLATE "USING_NLS_COMP" NOT NULL ENABLE,

	--Ogranicenja 
	CONSTRAINT "E_ROOM_PRICES_ID_PK" PRIMARY KEY ("ID")
);

CREATE OR REPLACE EDITIONABLE TRIGGER "PLAYGROUND"."E_ROOM_PRICES_BIU" 
    before insert or update
    on playground.e_room_prices
    for each row
begin
    if inserting then
        :new.created := sysdate;
        :new.created_by := coalesce(sys_context('APEX$SESSION','APP_USER'),user);
    end if;
    :new.updated := sysdate;
    :new.updated_by := coalesce(sys_context('APEX$SESSION','APP_USER'),user);
end;
/

--#05 PLAYGROUND.E_CHECKED_IN_PERSONS
BEGIN
  EXECUTE IMMEDIATE 'DROP TABLE PLAYGROUND.E_CHECKED_IN_PERSONS';
  EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -942 THEN
         RAISE;
  end if;
END;
/

CREATE TABLE "PLAYGROUND"."E_CHECKED_IN_PERSONS" 
(
	--Kolone
	"ID" 					NUMBER 	GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER										NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, 
	"RESERVATION_CD" 		VARCHAR2(20 CHAR) 	COLLATE "USING_NLS_COMP", 
	"PERSON_NAME" 			VARCHAR2(255 CHAR) 	COLLATE "USING_NLS_COMP", 
	"YEAR_OF_BIRTH" 		NUMBER, 
	"GENDER" 				VARCHAR2(10 CHAR) 	COLLATE "USING_NLS_COMP",

	--Ogranicenja 
	CONSTRAINT "E_CHECKED_IN_PERSONS_ID_PK" PRIMARY KEY ("ID"), 
	CONSTRAINT "E_CHK_IN_PERS_FK" FOREIGN KEY ("RESERVATION_CD") REFERENCES "PLAYGROUND"."E_RESERVATIONS" ("RESERVATION_CD") ON DELETE CASCADE ENABLE
);

CREATE INDEX "PLAYGROUND"."RES_CD_E_CHK_IN_PERS" ON "PLAYGROUND"."E_CHECKED_IN_PERSONS" ("RESERVATION_CD");


--#06 PLAYGROUND.E_LOV
BEGIN
  EXECUTE IMMEDIATE 'DROP TABLE PLAYGROUND.E_LOV';
  EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -942 THEN
         RAISE;
  end if;
END;
/

CREATE TABLE "PLAYGROUND"."E_LOV" 
(
	--Kolone
	"ID" 			NUMBER 	GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  
							NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, 
	"KEY" 			VARCHAR2(255 CHAR) COLLATE "USING_NLS_COMP", 
	"VALUE" 		VARCHAR2(255 CHAR) COLLATE "USING_NLS_COMP", 
	"TYPE" 			VARCHAR2(255 CHAR) COLLATE "USING_NLS_COMP", 
	"CREATED" 		DATE NOT NULL ENABLE, 
	"CREATED_BY" 	VARCHAR2(255 CHAR) COLLATE "USING_NLS_COMP" NOT NULL ENABLE, 
	"UPDATED" 		DATE NOT NULL ENABLE, 
	"UPDATED_BY" 	VARCHAR2(255 CHAR) COLLATE "USING_NLS_COMP" NOT NULL ENABLE,

	--Ogranicenja 
	 CONSTRAINT "E_LOV_ID_PK" PRIMARY KEY ("ID")
);

CREATE UNIQUE INDEX "PLAYGROUND"."BK_E_LOV" ON "PLAYGROUND"."E_LOV" ("TYPE", "ID");

--#07 PLAYGROUND.TMP_ROOM_UTILIZATION
BEGIN
  EXECUTE IMMEDIATE 'DROP TABLE PLAYGROUND.TMP_ROOM_UTILIZATION';
  EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -942 THEN
         RAISE;
  end if;
END;
/
	
CREATE TABLE "PLAYGROUND"."TMP_ROOM_UTILIZATION" 
(
	"ROOM_NUM" 		VARCHAR2(5 BYTE) COLLATE "USING_NLS_COMP", 
	"PERCENTAGE" 	NUMBER, 
	"COLOR" 		VARCHAR2(10 BYTE) COLLATE "USING_NLS_COMP"
);

COMMENT ON COLUMN "PLAYGROUND"."TMP_ROOM_UTILIZATION"."COLOR" IS 'Color for the graph';
